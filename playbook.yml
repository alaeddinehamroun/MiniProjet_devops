---
- name: Update and Install Docker, Kubernetes and Nagios
  hosts: webservers
  become: true

  tasks:
    - name: Update apt packages
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common

    - name: Add Dockerâ€™s official GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Set up the stable repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt packages
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name: docker-ce
        state: latest
    - name: Add Kubernetes signing key
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Install Kubernetes components
      apt:
        name: "{{ item }}"
        state: latest
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Hold Kubernetes components at their current version
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl


    - name: Disable swap (required for kubeadm)
      command: swapoff -a
      become: true
      when: ansible_swaptotal_mb > 0

    - name: Install required packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - build-essential
          - libgd-dev
          - openssl
          - libssl-dev
          - unzip

    - name: Download Nagios
      get_url:
        url: "https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.6.tar.gz"
        dest: "/tmp/nagios.tar.gz"

    - name: Extract Nagios
      unarchive:
        src: "/tmp/nagios.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Compile and Install Nagios
      shell: |
        cd /tmp/nagios-4.4.6/
        ./configure --with-httpd-conf=/etc/apache2/sites-enabled
        make all
        make install
        make install-init
        make install-config
        make install-commandmode
        make install-webconf
      args:
        creates: "/usr/local/nagios/bin/nagios"

    - name: Create Nagios User and Group
      shell: |
        useradd nagios
        usermod -a -G nagios www-data
      args:
        creates: "/home/nagios"






   
